// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TomatoCalculator.Server.Data;

namespace TomatoCalculator.Server.Migrations
{
    [DbContext(typeof(TomatoCalculatorContext))]
    partial class TomatoCalculatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TomatoCalculator.Shared.Models.DriverInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DriverNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriverInformations");
                });

            modelBuilder.Entity("TomatoCalculator.Shared.Models.RouteInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ApproximateMileage")
                        .HasColumnType("real");

                    b.Property<int>("ArrivalLocation")
                        .HasColumnType("int");

                    b.Property<int>("DepartureLocation")
                        .HasColumnType("int");

                    b.Property<string>("MapImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RouteInformations");
                });

            modelBuilder.Entity("TomatoCalculator.Shared.Models.Shipping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ActualLossTrip")
                        .HasColumnType("real");

                    b.Property<float>("AdjustedLoadValue")
                        .HasColumnType("real");

                    b.Property<float>("ApproximateMileage")
                        .HasColumnType("real");

                    b.Property<int>("ArrivalLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartureLocation")
                        .HasColumnType("int");

                    b.Property<float>("DepartureWeight")
                        .HasColumnType("real");

                    b.Property<string>("DriverFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverNumber")
                        .HasColumnType("int");

                    b.Property<float>("ExpectedLoadValue")
                        .HasColumnType("real");

                    b.Property<float>("ExpectedLosePerMile")
                        .HasColumnType("real");

                    b.Property<float>("ExpectedLossTrip")
                        .HasColumnType("real");

                    b.Property<float>("PricePerPound")
                        .HasColumnType("real");

                    b.Property<int>("TomatoType")
                        .HasColumnType("int");

                    b.Property<float>("TotalLoadValue")
                        .HasColumnType("real");

                    b.Property<DateTime>("UnloadDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("UnloadWeight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ShippingLoads");
                });

            modelBuilder.Entity("TomatoCalculator.Shared.Models.Tomato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ExpectedWastePerPound")
                        .HasColumnType("real");

                    b.Property<float>("PricePerPound")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tomatoes");
                });
#pragma warning restore 612, 618
        }
    }
}
